# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

    gedmo.listener.sluggable:
        class: Gedmo\Sluggable\SluggableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    app.admin.Category:
        class: AppBundle\Admin\CategoryAdmin
        arguments: [~, AppBundle\Entity\Category, ~]
        tags:
            - name: sonata.admin
              manager_type: orm
              group: "Contenu"
              label: "Catégories"
        public: true

    app.admin.Section:
        class: AppBundle\Admin\SectionAdmin
        arguments: [~, AppBundle\Entity\Section, ~]
        tags:
            - name: sonata.admin
              manager_type: orm
              group: "Contenu"
              label: "Rubriques"
        public: true

    app.admin.Content:
        class: AppBundle\Admin\ContentAdmin
        arguments: [~, AppBundle\Entity\Content, ~]
        tags:
            - name: sonata.admin
              manager_type: orm
              group: "Contenu"
              label: "Sous-Rubriques"
        calls:
            - [ setTemplate, [edit, 'AppBundle/ContentAdmin/edit.html.twig']]
        public: true

    app.admin.ContentBlock:
        class: AppBundle\Admin\ContentBlockAdmin
        arguments: [~, AppBundle\Entity\ContentBlock, ~]
        tags:
            - name: sonata.admin
              manager_type: orm
              group: "Contenu"
              label: "Contenus"
        public: true

    app.admin.Query:
        class: AppBundle\Admin\QueryAdmin
        arguments: [~, AppBundle\Entity\Query, ~]
        tags:
            - name: sonata.admin
              manager_type: orm
              group: "Données Flora"
              label: "Requêtes"
        public: true

    app.admin.QueryFilter:
        class: AppBundle\Admin\QueryFilterAdmin
        arguments: [~, AppBundle\Entity\QueryFilter, ~]
        tags:
            - name: sonata.admin
              manager_type: orm
              group: "Données Flora"
              label: "Filtres"
        calls:
            - [ setTemplate, [edit, 'AppBundle/QueryFilterAdmin/edit.html.twig']]
        public: true

    app.admin.Article:
        class: AppBundle\Admin\ArticleAdmin
        arguments: [~, AppBundle\Entity\Article, ~]
        tags:
            - name: sonata.admin
              manager_type: orm
              group: "Contenu"
              label: "Nouveautés"
        public: true

    app.admin.Organism:
        class: AppBundle\Admin\OrganismAdmin
        arguments: [~, AppBundle\Entity\Organism, ~]
        tags:
            - name: sonata.admin
              manager_type: orm
              group: "Données Flora"
              label: "Organismes"
        public: true

    app.admin.Activity:
        class: AppBundle\Admin\ActivityAdmin
        arguments: [~, AppBundle\Entity\Activity, ~]
        tags:
            - name: sonata.admin
              manager_type: orm
              group: "Données Flora"
              label: "Activités"
        public: true

    admin.media:
        class: AppBundle\Admin\MediaAdmin
        arguments: [~, AppBundle\Entity\Media, ~]
        tags:
            - name: sonata.admin
              manager_type: orm
              group: "Contenu"
              show_in_dashboard: false
              label: "Medias"
        public: false
        label: "Media"
        public: false
    Symfony\Cmf\Bundle\RoutingBundle\Doctrine\Orm\RouteProvider: '@cmf_routing.route_provider'
    Symfony\Cmf\Bundle\RoutingBundle\Doctrine\Orm\ContentRepository: '@cmf_routing.orm_content_repository'
    Symfony\Cmf\Bundle\RoutingBundle\Routing\DynamicRouter: '@cmf_routing.dynamic_router'
    AppBundle\EventListener\ContentListener:
        tags:
            - { name: doctrine.event_listener, event: onFlush }